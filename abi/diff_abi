#!/usr/bin/env python3
#
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import argparse
import os
import sys

from abitool import get_abi_tool

def diff_abi(abitool, baseline, new, report, short_report, symbol_list,
             full_report):
    tool = get_abi_tool(abitool)
    return tool.diff_abi(baseline, new, report, short_report, symbol_list,
                         full_report)

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--baseline', help='baseline dump to compare to',
                        required=True)
    parser.add_argument('--new', help='new dump to compare to baseline',
                        required=True)
    parser.add_argument('--abi-tool', default='libabigail',
                        help='abi tool to be used to monitor abi')
    parser.add_argument('--report', help='where to write the report to',
                        required=True)
    parser.add_argument('--short-report', help='where to write a short report to',
                        default=None)
    parser.add_argument('--kmi-symbol-list', '--kmi-whitelist', default=None,
                        help='KMI symbol list to filter for')
    parser.add_argument('--full-report', action='store_true',
                        help='Emit a detailled ABI report')

    args = parser.parse_args()

    abi_changed = diff_abi(args.abi_tool,
                           args.baseline,
                           args.new,
                           args.report,
                           args.short_report,
                           args.kmi_symbol_list,
                           args.full_report)
    if abi_changed:
        return 8

if __name__ == "__main__":
    sys.exit(main())
